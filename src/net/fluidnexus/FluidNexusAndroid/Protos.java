// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FluidNexus.proto

package net.fluidnexus.FluidNexusAndroid;

public final class Protos {
  private Protos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public static final class FluidNexusHashes extends
      com.google.protobuf.GeneratedMessageLite {
    // Use FluidNexusHashes.newBuilder() to construct.
    private FluidNexusHashes() {
      initFields();
    }
    private FluidNexusHashes(boolean noInit) {}
    
    private static final FluidNexusHashes defaultInstance;
    public static FluidNexusHashes getDefaultInstance() {
      return defaultInstance;
    }
    
    public FluidNexusHashes getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated string message_hash = 1;
    public static final int MESSAGE_HASH_FIELD_NUMBER = 1;
    private java.util.List<java.lang.String> messageHash_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getMessageHashList() {
      return messageHash_;
    }
    public int getMessageHashCount() { return messageHash_.size(); }
    public java.lang.String getMessageHash(int index) {
      return messageHash_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (java.lang.String element : getMessageHashList()) {
        output.writeString(1, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (java.lang.String element : getMessageHashList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getMessageHashList().size();
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes, Builder> {
      private net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes result;
      
      // Construct using net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes();
        return builder;
      }
      
      protected net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes getDefaultInstanceForType() {
        return net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.messageHash_ != java.util.Collections.EMPTY_LIST) {
          result.messageHash_ =
            java.util.Collections.unmodifiableList(result.messageHash_);
        }
        net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes other) {
        if (other == net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusHashes.getDefaultInstance()) return this;
        if (!other.messageHash_.isEmpty()) {
          if (result.messageHash_.isEmpty()) {
            result.messageHash_ = new java.util.ArrayList<java.lang.String>();
          }
          result.messageHash_.addAll(other.messageHash_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              addMessageHash(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string message_hash = 1;
      public java.util.List<java.lang.String> getMessageHashList() {
        return java.util.Collections.unmodifiableList(result.messageHash_);
      }
      public int getMessageHashCount() {
        return result.getMessageHashCount();
      }
      public java.lang.String getMessageHash(int index) {
        return result.getMessageHash(index);
      }
      public Builder setMessageHash(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.messageHash_.set(index, value);
        return this;
      }
      public Builder addMessageHash(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.messageHash_.isEmpty()) {
          result.messageHash_ = new java.util.ArrayList<java.lang.String>();
        }
        result.messageHash_.add(value);
        return this;
      }
      public Builder addAllMessageHash(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.messageHash_.isEmpty()) {
          result.messageHash_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.messageHash_);
        return this;
      }
      public Builder clearMessageHash() {
        result.messageHash_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FluidNexus.FluidNexusHashes)
    }
    
    static {
      defaultInstance = new FluidNexusHashes(true);
      net.fluidnexus.FluidNexusAndroid.Protos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FluidNexus.FluidNexusHashes)
  }
  
  public static final class FluidNexusMessage extends
      com.google.protobuf.GeneratedMessageLite {
    // Use FluidNexusMessage.newBuilder() to construct.
    private FluidNexusMessage() {
      initFields();
    }
    private FluidNexusMessage(boolean noInit) {}
    
    private static final FluidNexusMessage defaultInstance;
    public static FluidNexusMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public FluidNexusMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public enum MessageType
        implements com.google.protobuf.Internal.EnumLite {
      TEXT(0, 0),
      AUDIO(1, 1),
      IMAGE(2, 2),
      VIDEO(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static MessageType valueOf(int value) {
        switch (value) {
          case 0: return TEXT;
          case 1: return AUDIO;
          case 2: return IMAGE;
          case 3: return VIDEO;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private MessageType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:FluidNexus.FluidNexusMessage.MessageType)
    }
    
    public enum MessagePriority
        implements com.google.protobuf.Internal.EnumLite {
      NORMAL(0, 0),
      HIGH(1, 1),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static MessagePriority valueOf(int value) {
        switch (value) {
          case 0: return NORMAL;
          case 1: return HIGH;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<MessagePriority>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MessagePriority>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessagePriority>() {
              public MessagePriority findValueByNumber(int number) {
                return MessagePriority.valueOf(number)
      ;        }
            };
      
      private final int index;
      private final int value;
      private MessagePriority(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:FluidNexus.FluidNexusMessage.MessagePriority)
    }
    
    // optional string message_title = 1;
    public static final int MESSAGE_TITLE_FIELD_NUMBER = 1;
    private boolean hasMessageTitle;
    private java.lang.String messageTitle_ = "";
    public boolean hasMessageTitle() { return hasMessageTitle; }
    public java.lang.String getMessageTitle() { return messageTitle_; }
    
    // optional string message_content = 2;
    public static final int MESSAGE_CONTENT_FIELD_NUMBER = 2;
    private boolean hasMessageContent;
    private java.lang.String messageContent_ = "";
    public boolean hasMessageContent() { return hasMessageContent; }
    public java.lang.String getMessageContent() { return messageContent_; }
    
    // optional float message_timestamp = 3;
    public static final int MESSAGE_TIMESTAMP_FIELD_NUMBER = 3;
    private boolean hasMessageTimestamp;
    private float messageTimestamp_ = 0F;
    public boolean hasMessageTimestamp() { return hasMessageTimestamp; }
    public float getMessageTimestamp() { return messageTimestamp_; }
    
    // optional float message_received_timestamp = 10;
    public static final int MESSAGE_RECEIVED_TIMESTAMP_FIELD_NUMBER = 10;
    private boolean hasMessageReceivedTimestamp;
    private float messageReceivedTimestamp_ = 0F;
    public boolean hasMessageReceivedTimestamp() { return hasMessageReceivedTimestamp; }
    public float getMessageReceivedTimestamp() { return messageReceivedTimestamp_; }
    
    // optional string message_hash = 4;
    public static final int MESSAGE_HASH_FIELD_NUMBER = 4;
    private boolean hasMessageHash;
    private java.lang.String messageHash_ = "";
    public boolean hasMessageHash() { return hasMessageHash; }
    public java.lang.String getMessageHash() { return messageHash_; }
    
    // optional string message_source = 5;
    public static final int MESSAGE_SOURCE_FIELD_NUMBER = 5;
    private boolean hasMessageSource;
    private java.lang.String messageSource_ = "";
    public boolean hasMessageSource() { return hasMessageSource; }
    public java.lang.String getMessageSource() { return messageSource_; }
    
    // optional bool message_mine = 6;
    public static final int MESSAGE_MINE_FIELD_NUMBER = 6;
    private boolean hasMessageMine;
    private boolean messageMine_ = false;
    public boolean hasMessageMine() { return hasMessageMine; }
    public boolean getMessageMine() { return messageMine_; }
    
    // optional bool message_public = 16;
    public static final int MESSAGE_PUBLIC_FIELD_NUMBER = 16;
    private boolean hasMessagePublic;
    private boolean messagePublic_ = false;
    public boolean hasMessagePublic() { return hasMessagePublic; }
    public boolean getMessagePublic() { return messagePublic_; }
    
    // optional int32 message_ttl = 17 [default = 0];
    public static final int MESSAGE_TTL_FIELD_NUMBER = 17;
    private boolean hasMessageTtl;
    private int messageTtl_ = 0;
    public boolean hasMessageTtl() { return hasMessageTtl; }
    public int getMessageTtl() { return messageTtl_; }
    
    // optional .FluidNexus.FluidNexusMessage.MessageType message_type = 7;
    public static final int MESSAGE_TYPE_FIELD_NUMBER = 7;
    private boolean hasMessageType;
    private net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessageType messageType_;
    public boolean hasMessageType() { return hasMessageType; }
    public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessageType getMessageType() { return messageType_; }
    
    // optional .FluidNexus.FluidNexusMessage.MessagePriority message_priority = 18;
    public static final int MESSAGE_PRIORITY_FIELD_NUMBER = 18;
    private boolean hasMessagePriority;
    private net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessagePriority messagePriority_;
    public boolean hasMessagePriority() { return hasMessagePriority; }
    public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessagePriority getMessagePriority() { return messagePriority_; }
    
    // optional bytes message_attachment = 8;
    public static final int MESSAGE_ATTACHMENT_FIELD_NUMBER = 8;
    private boolean hasMessageAttachment;
    private com.google.protobuf.ByteString messageAttachment_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasMessageAttachment() { return hasMessageAttachment; }
    public com.google.protobuf.ByteString getMessageAttachment() { return messageAttachment_; }
    
    // optional string message_attachment_original_filename = 9;
    public static final int MESSAGE_ATTACHMENT_ORIGINAL_FILENAME_FIELD_NUMBER = 9;
    private boolean hasMessageAttachmentOriginalFilename;
    private java.lang.String messageAttachmentOriginalFilename_ = "";
    public boolean hasMessageAttachmentOriginalFilename() { return hasMessageAttachmentOriginalFilename; }
    public java.lang.String getMessageAttachmentOriginalFilename() { return messageAttachmentOriginalFilename_; }
    
    private void initFields() {
      messageType_ = net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessageType.TEXT;
      messagePriority_ = net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessagePriority.NORMAL;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMessageTitle()) {
        output.writeString(1, getMessageTitle());
      }
      if (hasMessageContent()) {
        output.writeString(2, getMessageContent());
      }
      if (hasMessageTimestamp()) {
        output.writeFloat(3, getMessageTimestamp());
      }
      if (hasMessageHash()) {
        output.writeString(4, getMessageHash());
      }
      if (hasMessageSource()) {
        output.writeString(5, getMessageSource());
      }
      if (hasMessageMine()) {
        output.writeBool(6, getMessageMine());
      }
      if (hasMessageType()) {
        output.writeEnum(7, getMessageType().getNumber());
      }
      if (hasMessageAttachment()) {
        output.writeBytes(8, getMessageAttachment());
      }
      if (hasMessageAttachmentOriginalFilename()) {
        output.writeString(9, getMessageAttachmentOriginalFilename());
      }
      if (hasMessageReceivedTimestamp()) {
        output.writeFloat(10, getMessageReceivedTimestamp());
      }
      if (hasMessagePublic()) {
        output.writeBool(16, getMessagePublic());
      }
      if (hasMessageTtl()) {
        output.writeInt32(17, getMessageTtl());
      }
      if (hasMessagePriority()) {
        output.writeEnum(18, getMessagePriority().getNumber());
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMessageTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getMessageTitle());
      }
      if (hasMessageContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMessageContent());
      }
      if (hasMessageTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, getMessageTimestamp());
      }
      if (hasMessageHash()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getMessageHash());
      }
      if (hasMessageSource()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getMessageSource());
      }
      if (hasMessageMine()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getMessageMine());
      }
      if (hasMessageType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, getMessageType().getNumber());
      }
      if (hasMessageAttachment()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getMessageAttachment());
      }
      if (hasMessageAttachmentOriginalFilename()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(9, getMessageAttachmentOriginalFilename());
      }
      if (hasMessageReceivedTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(10, getMessageReceivedTimestamp());
      }
      if (hasMessagePublic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, getMessagePublic());
      }
      if (hasMessageTtl()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, getMessageTtl());
      }
      if (hasMessagePriority()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(18, getMessagePriority().getNumber());
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage, Builder> {
      private net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage result;
      
      // Construct using net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage();
        return builder;
      }
      
      protected net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage getDefaultInstanceForType() {
        return net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage other) {
        if (other == net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.getDefaultInstance()) return this;
        if (other.hasMessageTitle()) {
          setMessageTitle(other.getMessageTitle());
        }
        if (other.hasMessageContent()) {
          setMessageContent(other.getMessageContent());
        }
        if (other.hasMessageTimestamp()) {
          setMessageTimestamp(other.getMessageTimestamp());
        }
        if (other.hasMessageReceivedTimestamp()) {
          setMessageReceivedTimestamp(other.getMessageReceivedTimestamp());
        }
        if (other.hasMessageHash()) {
          setMessageHash(other.getMessageHash());
        }
        if (other.hasMessageSource()) {
          setMessageSource(other.getMessageSource());
        }
        if (other.hasMessageMine()) {
          setMessageMine(other.getMessageMine());
        }
        if (other.hasMessagePublic()) {
          setMessagePublic(other.getMessagePublic());
        }
        if (other.hasMessageTtl()) {
          setMessageTtl(other.getMessageTtl());
        }
        if (other.hasMessageType()) {
          setMessageType(other.getMessageType());
        }
        if (other.hasMessagePriority()) {
          setMessagePriority(other.getMessagePriority());
        }
        if (other.hasMessageAttachment()) {
          setMessageAttachment(other.getMessageAttachment());
        }
        if (other.hasMessageAttachmentOriginalFilename()) {
          setMessageAttachmentOriginalFilename(other.getMessageAttachmentOriginalFilename());
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              setMessageTitle(input.readString());
              break;
            }
            case 18: {
              setMessageContent(input.readString());
              break;
            }
            case 29: {
              setMessageTimestamp(input.readFloat());
              break;
            }
            case 34: {
              setMessageHash(input.readString());
              break;
            }
            case 42: {
              setMessageSource(input.readString());
              break;
            }
            case 48: {
              setMessageMine(input.readBool());
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessageType value = net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessageType.valueOf(rawValue);
              if (value != null) {
                setMessageType(value);
              }
              break;
            }
            case 66: {
              setMessageAttachment(input.readBytes());
              break;
            }
            case 74: {
              setMessageAttachmentOriginalFilename(input.readString());
              break;
            }
            case 85: {
              setMessageReceivedTimestamp(input.readFloat());
              break;
            }
            case 128: {
              setMessagePublic(input.readBool());
              break;
            }
            case 136: {
              setMessageTtl(input.readInt32());
              break;
            }
            case 144: {
              int rawValue = input.readEnum();
              net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessagePriority value = net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessagePriority.valueOf(rawValue);
              if (value != null) {
                setMessagePriority(value);
              }
              break;
            }
          }
        }
      }
      
      
      // optional string message_title = 1;
      public boolean hasMessageTitle() {
        return result.hasMessageTitle();
      }
      public java.lang.String getMessageTitle() {
        return result.getMessageTitle();
      }
      public Builder setMessageTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessageTitle = true;
        result.messageTitle_ = value;
        return this;
      }
      public Builder clearMessageTitle() {
        result.hasMessageTitle = false;
        result.messageTitle_ = getDefaultInstance().getMessageTitle();
        return this;
      }
      
      // optional string message_content = 2;
      public boolean hasMessageContent() {
        return result.hasMessageContent();
      }
      public java.lang.String getMessageContent() {
        return result.getMessageContent();
      }
      public Builder setMessageContent(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessageContent = true;
        result.messageContent_ = value;
        return this;
      }
      public Builder clearMessageContent() {
        result.hasMessageContent = false;
        result.messageContent_ = getDefaultInstance().getMessageContent();
        return this;
      }
      
      // optional float message_timestamp = 3;
      public boolean hasMessageTimestamp() {
        return result.hasMessageTimestamp();
      }
      public float getMessageTimestamp() {
        return result.getMessageTimestamp();
      }
      public Builder setMessageTimestamp(float value) {
        result.hasMessageTimestamp = true;
        result.messageTimestamp_ = value;
        return this;
      }
      public Builder clearMessageTimestamp() {
        result.hasMessageTimestamp = false;
        result.messageTimestamp_ = 0F;
        return this;
      }
      
      // optional float message_received_timestamp = 10;
      public boolean hasMessageReceivedTimestamp() {
        return result.hasMessageReceivedTimestamp();
      }
      public float getMessageReceivedTimestamp() {
        return result.getMessageReceivedTimestamp();
      }
      public Builder setMessageReceivedTimestamp(float value) {
        result.hasMessageReceivedTimestamp = true;
        result.messageReceivedTimestamp_ = value;
        return this;
      }
      public Builder clearMessageReceivedTimestamp() {
        result.hasMessageReceivedTimestamp = false;
        result.messageReceivedTimestamp_ = 0F;
        return this;
      }
      
      // optional string message_hash = 4;
      public boolean hasMessageHash() {
        return result.hasMessageHash();
      }
      public java.lang.String getMessageHash() {
        return result.getMessageHash();
      }
      public Builder setMessageHash(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessageHash = true;
        result.messageHash_ = value;
        return this;
      }
      public Builder clearMessageHash() {
        result.hasMessageHash = false;
        result.messageHash_ = getDefaultInstance().getMessageHash();
        return this;
      }
      
      // optional string message_source = 5;
      public boolean hasMessageSource() {
        return result.hasMessageSource();
      }
      public java.lang.String getMessageSource() {
        return result.getMessageSource();
      }
      public Builder setMessageSource(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessageSource = true;
        result.messageSource_ = value;
        return this;
      }
      public Builder clearMessageSource() {
        result.hasMessageSource = false;
        result.messageSource_ = getDefaultInstance().getMessageSource();
        return this;
      }
      
      // optional bool message_mine = 6;
      public boolean hasMessageMine() {
        return result.hasMessageMine();
      }
      public boolean getMessageMine() {
        return result.getMessageMine();
      }
      public Builder setMessageMine(boolean value) {
        result.hasMessageMine = true;
        result.messageMine_ = value;
        return this;
      }
      public Builder clearMessageMine() {
        result.hasMessageMine = false;
        result.messageMine_ = false;
        return this;
      }
      
      // optional bool message_public = 16;
      public boolean hasMessagePublic() {
        return result.hasMessagePublic();
      }
      public boolean getMessagePublic() {
        return result.getMessagePublic();
      }
      public Builder setMessagePublic(boolean value) {
        result.hasMessagePublic = true;
        result.messagePublic_ = value;
        return this;
      }
      public Builder clearMessagePublic() {
        result.hasMessagePublic = false;
        result.messagePublic_ = false;
        return this;
      }
      
      // optional int32 message_ttl = 17 [default = 0];
      public boolean hasMessageTtl() {
        return result.hasMessageTtl();
      }
      public int getMessageTtl() {
        return result.getMessageTtl();
      }
      public Builder setMessageTtl(int value) {
        result.hasMessageTtl = true;
        result.messageTtl_ = value;
        return this;
      }
      public Builder clearMessageTtl() {
        result.hasMessageTtl = false;
        result.messageTtl_ = 0;
        return this;
      }
      
      // optional .FluidNexus.FluidNexusMessage.MessageType message_type = 7;
      public boolean hasMessageType() {
        return result.hasMessageType();
      }
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessageType getMessageType() {
        return result.getMessageType();
      }
      public Builder setMessageType(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMessageType = true;
        result.messageType_ = value;
        return this;
      }
      public Builder clearMessageType() {
        result.hasMessageType = false;
        result.messageType_ = net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessageType.TEXT;
        return this;
      }
      
      // optional .FluidNexus.FluidNexusMessage.MessagePriority message_priority = 18;
      public boolean hasMessagePriority() {
        return result.hasMessagePriority();
      }
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessagePriority getMessagePriority() {
        return result.getMessagePriority();
      }
      public Builder setMessagePriority(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessagePriority value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasMessagePriority = true;
        result.messagePriority_ = value;
        return this;
      }
      public Builder clearMessagePriority() {
        result.hasMessagePriority = false;
        result.messagePriority_ = net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.MessagePriority.NORMAL;
        return this;
      }
      
      // optional bytes message_attachment = 8;
      public boolean hasMessageAttachment() {
        return result.hasMessageAttachment();
      }
      public com.google.protobuf.ByteString getMessageAttachment() {
        return result.getMessageAttachment();
      }
      public Builder setMessageAttachment(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessageAttachment = true;
        result.messageAttachment_ = value;
        return this;
      }
      public Builder clearMessageAttachment() {
        result.hasMessageAttachment = false;
        result.messageAttachment_ = getDefaultInstance().getMessageAttachment();
        return this;
      }
      
      // optional string message_attachment_original_filename = 9;
      public boolean hasMessageAttachmentOriginalFilename() {
        return result.hasMessageAttachmentOriginalFilename();
      }
      public java.lang.String getMessageAttachmentOriginalFilename() {
        return result.getMessageAttachmentOriginalFilename();
      }
      public Builder setMessageAttachmentOriginalFilename(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessageAttachmentOriginalFilename = true;
        result.messageAttachmentOriginalFilename_ = value;
        return this;
      }
      public Builder clearMessageAttachmentOriginalFilename() {
        result.hasMessageAttachmentOriginalFilename = false;
        result.messageAttachmentOriginalFilename_ = getDefaultInstance().getMessageAttachmentOriginalFilename();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FluidNexus.FluidNexusMessage)
    }
    
    static {
      defaultInstance = new FluidNexusMessage(true);
      net.fluidnexus.FluidNexusAndroid.Protos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FluidNexus.FluidNexusMessage)
  }
  
  public static final class FluidNexusMessages extends
      com.google.protobuf.GeneratedMessageLite {
    // Use FluidNexusMessages.newBuilder() to construct.
    private FluidNexusMessages() {
      initFields();
    }
    private FluidNexusMessages(boolean noInit) {}
    
    private static final FluidNexusMessages defaultInstance;
    public static FluidNexusMessages getDefaultInstance() {
      return defaultInstance;
    }
    
    public FluidNexusMessages getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    // repeated .FluidNexus.FluidNexusMessage message = 1;
    public static final int MESSAGE_FIELD_NUMBER = 1;
    private java.util.List<net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage> message_ =
      java.util.Collections.emptyList();
    public java.util.List<net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage> getMessageList() {
      return message_;
    }
    public int getMessageCount() { return message_.size(); }
    public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage getMessage(int index) {
      return message_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage element : getMessageList()) {
        output.writeMessage(1, element);
      }
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage element : getMessageList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      memoizedSerializedSize = size;
      return size;
    }
    
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages, Builder> {
      private net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages result;
      
      // Construct using net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages();
        return builder;
      }
      
      protected net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages getDefaultInstanceForType() {
        return net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.message_ != java.util.Collections.EMPTY_LIST) {
          result.message_ =
            java.util.Collections.unmodifiableList(result.message_);
        }
        net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages other) {
        if (other == net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessages.getDefaultInstance()) return this;
        if (!other.message_.isEmpty()) {
          if (result.message_.isEmpty()) {
            result.message_ = new java.util.ArrayList<net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage>();
          }
          result.message_.addAll(other.message_);
        }
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!parseUnknownField(input, extensionRegistry, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.Builder subBuilder = net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addMessage(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .FluidNexus.FluidNexusMessage message = 1;
      public java.util.List<net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage> getMessageList() {
        return java.util.Collections.unmodifiableList(result.message_);
      }
      public int getMessageCount() {
        return result.getMessageCount();
      }
      public net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage getMessage(int index) {
        return result.getMessage(index);
      }
      public Builder setMessage(int index, net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.message_.set(index, value);
        return this;
      }
      public Builder setMessage(int index, net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.Builder builderForValue) {
        result.message_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMessage(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.message_.isEmpty()) {
          result.message_ = new java.util.ArrayList<net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage>();
        }
        result.message_.add(value);
        return this;
      }
      public Builder addMessage(net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage.Builder builderForValue) {
        if (result.message_.isEmpty()) {
          result.message_ = new java.util.ArrayList<net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage>();
        }
        result.message_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMessage(
          java.lang.Iterable<? extends net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage> values) {
        if (result.message_.isEmpty()) {
          result.message_ = new java.util.ArrayList<net.fluidnexus.FluidNexusAndroid.Protos.FluidNexusMessage>();
        }
        super.addAll(values, result.message_);
        return this;
      }
      public Builder clearMessage() {
        result.message_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:FluidNexus.FluidNexusMessages)
    }
    
    static {
      defaultInstance = new FluidNexusMessages(true);
      net.fluidnexus.FluidNexusAndroid.Protos.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:FluidNexus.FluidNexusMessages)
  }
  
  
  static {
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
